-- DER/DDL update for Auto_Infracao and related entities (Oracle 19c)
-- Idempotent migration: uses conditional checks on USER_* views
-- NOTE: We avoid dropping existing data/constraints. We add new columns/constraints
-- and keep existing ones to preserve backward compatibility with current app code.

-- Helper: add column if not exists
DECLARE
  v_count INTEGER;
BEGIN
  NULL; -- anchor block
END;
/

-- =============================
-- ESTABELECIMENTO adjustments
-- =============================
-- Ensure table exists (from V1)
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'ESTABELECIMENTO';
  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE ESTABELECIMENTO (
      ID_ESTABELECIMENTO VARCHAR2(255) PRIMARY KEY,
      CNPJ               VARCHAR2(18),
      NOME_ESTABELECIMENTO VARCHAR2(255) NOT NULL,
      ENDERECO_ESTABELECIMENTO VARCHAR2(500),
      COMPLEMENTO_ESTABELECIMENTO VARCHAR2(255),
      BAIRRO_ESTABELECIMENTO VARCHAR2(255),
      CIDADE_ESTABELECIMENTO VARCHAR2(255)
    )';
  ELSE
    -- Upgrade column types/columns
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='CNPJ' AND DATA_LENGTH >= 18;
    IF v_count = 0 THEN
      BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO MODIFY (CNPJ VARCHAR2(18))'; EXCEPTION WHEN OTHERS THEN NULL; END;
    END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='NOME_ESTABELECIMENTO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (NOME_ESTABELECIMENTO VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ENDERECO_ESTABELECIMENTO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (ENDERECO_ESTABELECIMENTO VARCHAR2(500))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='COMPLEMENTO_ESTABELECIMENTO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (COMPLEMENTO_ESTABELECIMENTO VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='BAIRRO_ESTABELECIMENTO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (BAIRRO_ESTABELECIMENTO VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='CIDADE_ESTABELECIMENTO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (CIDADE_ESTABELECIMENTO VARCHAR2(255))'; END IF;

    -- If ID_ESTABELECIMENTO is NUMBER, widen to VARCHAR2(255) for the new DER
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ID_ESTABELECIMENTO' AND DATA_TYPE='NUMBER';
    IF v_count > 0 THEN
      BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO MODIFY (ID_ESTABELECIMENTO VARCHAR2(255))'; EXCEPTION WHEN OTHERS THEN NULL; END;
    END IF;
  END IF;
END;
/

-- Unique on CNPJ
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_CONSTRAINTS WHERE TABLE_NAME='ESTABELECIMENTO' AND CONSTRAINT_NAME='UK_ESTABELECIMENTO_CNPJ' AND CONSTRAINT_TYPE='U';
  IF v_count = 0 THEN
    BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD CONSTRAINT UK_ESTABELECIMENTO_CNPJ UNIQUE (CNPJ)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  END IF;
END;
/

COMMENT ON TABLE ESTABELECIMENTO IS 'Cadastro de estabelecimentos autuados';
COMMENT ON COLUMN ESTABELECIMENTO.NOME_ESTABELECIMENTO IS 'Nome do estabelecimento';
COMMENT ON COLUMN ESTABELECIMENTO.CNPJ IS 'CNPJ do estabelecimento (único)';

-- =============================
-- RESPONSAVEL adjustments
-- =============================
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'RESPONSAVEL';
  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE RESPONSAVEL (
      ID_RESPONSAVEL VARCHAR2(255) PRIMARY KEY,
      NOME_RESPONSAVEL VARCHAR2(255) NOT NULL,
      RG_RESPONSAVEL VARCHAR2(20),
      CPF_RESPONSAVEL VARCHAR2(14),
      CONDICAO_RESPONSAVEL VARCHAR2(255),
      ENDERECO_RESPONSAVEL VARCHAR2(500),
      COMPLEMENTO_RESPONSAVEL VARCHAR2(255),
      BAIRRO_RESPONSAVEL VARCHAR2(255),
      CIDADE_RESPONSAVEL VARCHAR2(255)
    )';
  ELSE
    -- Add/rename-like: keep old cols, add new ones
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='NOME_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (NOME_RESPONSAVEL VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='RG_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (RG_RESPONSAVEL VARCHAR2(20))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CPF_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CPF_RESPONSAVEL VARCHAR2(14))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CONDICAO_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CONDICAO_RESPONSAVEL VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ENDERECO_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (ENDERECO_RESPONSAVEL VARCHAR2(500))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='COMPLEMENTO_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (COMPLEMENTO_RESPONSAVEL VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='BAIRRO_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (BAIRRO_RESPONSAVEL VARCHAR2(255))'; END IF;

    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CIDADE_RESPONSAVEL';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CIDADE_RESPONSAVEL VARCHAR2(255))'; END IF;

    -- Adapt ID type to VARCHAR2 if needed
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ID_RESPONSAVEL' AND DATA_TYPE='NUMBER';
    IF v_count > 0 THEN
      BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL MODIFY (ID_RESPONSAVEL VARCHAR2(255))'; EXCEPTION WHEN OTHERS THEN NULL; END;
    END IF;
  END IF;
END;
/

-- Unique on CPF_RESPONSAVEL
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_CONSTRAINTS WHERE TABLE_NAME='RESPONSAVEL' AND CONSTRAINT_NAME='UK_RESPONSAVEL_CPF' AND CONSTRAINT_TYPE='U';
  IF v_count = 0 THEN
    BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD CONSTRAINT UK_RESPONSAVEL_CPF UNIQUE (CPF_RESPONSAVEL)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  END IF;
END;
/

COMMENT ON TABLE RESPONSAVEL IS 'Cadastro de responsáveis';
COMMENT ON COLUMN RESPONSAVEL.NOME_RESPONSAVEL IS 'Nome do responsável';
COMMENT ON COLUMN RESPONSAVEL.CPF_RESPONSAVEL IS 'CPF do responsável (único)';

-- =============================
-- TESTEMUNHA adjustments
-- =============================
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'TESTEMUNHA';
  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE TESTEMUNHA (
      ID_TESTEMUNHA VARCHAR2(255) PRIMARY KEY,
      NOME_TESTEMUNHA VARCHAR2(255) NOT NULL,
      RESIDENCIA_TESTEMUNHA VARCHAR2(500),
      DOCUMENTO_TESTEMUNHA VARCHAR2(255)
    )';
  ELSE
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='NOME_TESTEMUNHA';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (NOME_TESTEMUNHA VARCHAR2(255))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='RESIDENCIA_TESTEMUNHA';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (RESIDENCIA_TESTEMUNHA VARCHAR2(500))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='DOCUMENTO_TESTEMUNHA';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (DOCUMENTO_TESTEMUNHA VARCHAR2(255))'; END IF;
    -- Adapt ID type to VARCHAR2 if needed
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='ID_TESTEMUNHA' AND DATA_TYPE='NUMBER';
    IF v_count > 0 THEN BEGIN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA MODIFY (ID_TESTEMUNHA VARCHAR2(255))'; EXCEPTION WHEN OTHERS THEN NULL; END; END IF;
  END IF;
END;
/

-- =============================
-- MENOR_ENVOLVIDO adjustments
-- =============================
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'MENOR_ENVOLVIDO';
  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE MENOR_ENVOLVIDO (
      ID_MENOR VARCHAR2(255) PRIMARY KEY,
      NOME_MENOR VARCHAR2(255) NOT NULL,
      DATA_NASCIMENTO_MENOR DATE,
      DOCUMENTO_MENOR VARCHAR2(255),
      FILIACAO_MENOR VARCHAR2(500),
      RESIDENCIA_MENOR VARCHAR2(500),
      ID_AUTO_INFRACAO VARCHAR2(255) NOT NULL
    )';
  ELSE
    -- Change PK column name/type if old exists (ID -> ID_MENOR)
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='ID_MENOR';
    IF v_count = 0 THEN
      -- Try rename old ID column
      BEGIN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO RENAME COLUMN ID TO ID_MENOR'; EXCEPTION WHEN OTHERS THEN NULL; END;
    END IF;
    -- Ensure PK type is VARCHAR2
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='ID_MENOR' AND DATA_TYPE='NUMBER';
    IF v_count > 0 THEN BEGIN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO MODIFY (ID_MENOR VARCHAR2(255))'; EXCEPTION WHEN OTHERS THEN NULL; END; END IF;

    -- Add new columns
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='NOME_MENOR';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (NOME_MENOR VARCHAR2(255))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='DATA_NASCIMENTO_MENOR';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (DATA_NASCIMENTO_MENOR DATE)'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='DOCUMENTO_MENOR';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (DOCUMENTO_MENOR VARCHAR2(255))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='FILIACAO_MENOR';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (FILIACAO_MENOR VARCHAR2(500))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='RESIDENCIA_MENOR';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (RESIDENCIA_MENOR VARCHAR2(500))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='ID_AUTO_INFRACAO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (ID_AUTO_INFRACAO VARCHAR2(255))'; END IF;
  END IF;
END;
/

-- Index for MENOR_ENVOLVIDO(ID_AUTO_INFRACAO)
BEGIN
  EXECUTE IMMEDIATE 'CREATE INDEX IX_MENOR_AUTO ON MENOR_ENVOLVIDO (ID_AUTO_INFRACAO)';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/

COMMENT ON TABLE MENOR_ENVOLVIDO IS 'Cadastro de menores envolvidos vinculados ao Auto';

-- =============================
-- AUTO_INFRACAO adjustments
-- =============================
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'AUTO_INFRACAO';
  IF v_count = 0 THEN
    -- Safety: create table if not exists (minimal; actual structure is created in V1)
    EXECUTE IMMEDIATE 'CREATE TABLE AUTO_INFRACAO (ID NUMBER(19) PRIMARY KEY)';
  END IF;

  -- Add new DER columns
  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_AUTO_INFRACAO';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ID_AUTO_INFRACAO VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='HORARIO_INFRACAO';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (HORARIO_INFRACAO TIMESTAMP)'; END IF;

  -- Backfill HORARIO_INFRACAO from HORA_INFRACAO if exists
  BEGIN EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO SET HORARIO_INFRACAO = HORA_INFRACAO WHERE HORARIO_INFRACAO IS NULL AND HORA_INFRACAO IS NOT NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='COMARCA';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (COMARCA VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='NUMERO_CRIANCAS';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (NUMERO_CRIANCAS NUMBER(3))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='NUMERO_ADOLESCENTES';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (NUMERO_ADOLESCENTES NUMBER(3))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='FUNDAMENTO_LEGAL';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (FUNDAMENTO_LEGAL VARCHAR2(500))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ARTIGO_ECA';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ARTIGO_ECA VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='PORTARIA_N';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (PORTARIA_N VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='NOME_COMISSARIO_AUTUANTE';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (NOME_COMISSARIO_AUTUANTE VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='MATRICULA_AUTUANTE';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (MATRICULA_AUTUANTE VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='OBSERVACOES';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (OBSERVACOES CLOB)'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='DATA_INTIMACAO';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (DATA_INTIMACAO DATE)'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='PRAZO_DEFESA';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (PRAZO_DEFESA DATE)'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_ESTABELECIMENTO';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ID_ESTABELECIMENTO VARCHAR2(255))'; END IF;

  SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_RESPONSAVEL';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ID_RESPONSAVEL VARCHAR2(255))'; END IF;
END;
/

-- Backfill ID_AUTO_INFRACAO for existing rows
BEGIN
  EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO SET ID_AUTO_INFRACAO = RAWTOHEX(SYS_GUID()) WHERE ID_AUTO_INFRACAO IS NULL';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- Unique indexes/constraints
BEGIN
  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX IX_AUTO_NUMERO_AUTO ON AUTO_INFRACAO (NUMERO_AUTO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

BEGIN
  EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX UX_AUTO_ID_STR ON AUTO_INFRACAO (ID_AUTO_INFRACAO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- Supporting indexes
BEGIN
  EXECUTE IMMEDIATE 'CREATE INDEX IX_AUTO_ESTAB ON AUTO_INFRACAO (ID_ESTABELECIMENTO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN
  EXECUTE IMMEDIATE 'CREATE INDEX IX_AUTO_RESP ON AUTO_INFRACAO (ID_RESPONSAVEL)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

COMMENT ON TABLE AUTO_INFRACAO IS 'Auto de Infração';
COMMENT ON COLUMN AUTO_INFRACAO.ID_AUTO_INFRACAO IS 'Identificador UUID string (novo DER)';
COMMENT ON COLUMN AUTO_INFRACAO.OBSERVACOES IS 'Observações do auto (CLOB)';

-- =============================
-- AUTO_INFRACAO_TESTEMUNHA adjustments
-- =============================
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_TABLES WHERE TABLE_NAME = 'AUTO_INFRACAO_TESTEMUNHA';
  IF v_count = 0 THEN
    EXECUTE IMMEDIATE 'CREATE TABLE AUTO_INFRACAO_TESTEMUNHA (
      ID_AUTO_INFRACAO VARCHAR2(255) NOT NULL,
      ID_TESTEMUNHA    VARCHAR2(255) NOT NULL,
      CONSTRAINT PK_AUTO_INFRACAO_TEST PRIMARY KEY (ID_AUTO_INFRACAO, ID_TESTEMUNHA)
    )';
  ELSE
    -- Add string ID columns alongside numeric ones
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='ID_AUTO_INFRACAO';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD (ID_AUTO_INFRACAO VARCHAR2(255))'; END IF;
    SELECT COUNT(*) INTO v_count FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='ID_TESTEMUNHA';
    IF v_count = 0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD (ID_TESTEMUNHA VARCHAR2(255))'; END IF;
  END IF;
END;
/

-- FKs (string-based) - rely on UNIQUE on target columns where applicable
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD CONSTRAINT FK_AUTO_ESTAB FOREIGN KEY (ID_ESTABELECIMENTO) REFERENCES ESTABELECIMENTO(ID_ESTABELECIMENTO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD CONSTRAINT FK_AUTO_RESP FOREIGN KEY (ID_RESPONSAVEL) REFERENCES RESPONSAVEL(ID_RESPONSAVEL)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT FK_AIT_AUTO_STR FOREIGN KEY (ID_AUTO_INFRACAO) REFERENCES AUTO_INFRACAO(ID_AUTO_INFRACAO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT FK_AIT_TEST_STR FOREIGN KEY (ID_TESTEMUNHA) REFERENCES TESTEMUNHA(ID_TESTEMUNHA)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- =============================
-- COMMENTS for clarity
-- =============================
COMMENT ON TABLE AUTO_INFRACAO_TESTEMUNHA IS 'Relação N:N entre Auto e Testemunha (IDs string)';
COMMENT ON COLUMN AUTO_INFRACAO.NOME_COMISSARIO_AUTUANTE IS 'Nome do comissário autuante';
COMMENT ON COLUMN AUTO_INFRACAO.MATRICULA_AUTUANTE IS 'Matrícula do autuante';
COMMENT ON COLUMN AUTO_INFRACAO.FUNDAMENTO_LEGAL IS 'Fundamento legal';
COMMENT ON COLUMN AUTO_INFRACAO.ARTIGO_ECA IS 'Artigo do ECA';
COMMENT ON COLUMN AUTO_INFRACAO.PORTARIA_N IS 'Portaria';

