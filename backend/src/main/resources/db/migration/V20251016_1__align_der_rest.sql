-- Align remaining entities to corrected DDL (Oracle 19c)
-- Idempotent migration. Uses USER_* metadata checks and guards each step.

-- ===== Sequences safety =====
DECLARE v INTEGER; BEGIN
  SELECT COUNT(*) INTO v FROM USER_SEQUENCES WHERE SEQUENCE_NAME='S_ESTABELECIMENTO';
  IF v=0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_ESTABELECIMENTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
  SELECT COUNT(*) INTO v FROM USER_SEQUENCES WHERE SEQUENCE_NAME='S_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_RESPONSAVEL START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
  SELECT COUNT(*) INTO v FROM USER_SEQUENCES WHERE SEQUENCE_NAME='S_TESTEMUNHA';
  IF v=0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_TESTEMUNHA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
  SELECT COUNT(*) INTO v FROM USER_SEQUENCES WHERE SEQUENCE_NAME='S_MENOR_ENVOLVIDO';
  IF v=0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_MENOR_ENVOLVIDO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
END;
/

-- ===== ESTABELECIMENTO =====
DECLARE v INTEGER; BEGIN
  -- PK: ID
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ID';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ID_ESTABELECIMENTO';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO RENAME COLUMN ID_ESTABELECIMENTO TO ID'; END IF;
  END IF;
  -- String business key: ID_ESTABELECIMENTO_STR
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ID_ESTABELECIMENTO_STR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (ID_ESTABELECIMENTO_STR VARCHAR2(255))'; END IF;
  BEGIN EXECUTE IMMEDIATE 'UPDATE ESTABELECIMENTO SET ID_ESTABELECIMENTO_STR = RAWTOHEX(SYS_GUID()) WHERE ID_ESTABELECIMENTO_STR IS NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO MODIFY (ID_ESTABELECIMENTO_STR NOT NULL)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX UX_ESTAB_IDSTR ON ESTABELECIMENTO (ID_ESTABELECIMENTO_STR)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Normalize columns
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='NOME_ESTABELECIMENTO';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='NOME';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO RENAME COLUMN NOME TO NOME_ESTABELECIMENTO';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (NOME_ESTABELECIMENTO VARCHAR2(255))'; END IF;
  END IF;
  -- EndereÃ§o detalhado
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ENDERECO_ESTABELECIMENTO';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='ENDERECO';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO RENAME COLUMN ENDERECO TO ENDERECO_ESTABELECIMENTO';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (ENDERECO_ESTABELECIMENTO VARCHAR2(500))'; END IF;
  END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='COMPLEMENTO_ESTABELECIMENTO';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (COMPLEMENTO_ESTABELECIMENTO VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='BAIRRO_ESTABELECIMENTO';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (BAIRRO_ESTABELECIMENTO VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='CIDADE_ESTABELECIMENTO';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD (CIDADE_ESTABELECIMENTO VARCHAR2(255))'; END IF;
  -- CNPJ length 18 + unique
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='ESTABELECIMENTO' AND COLUMN_NAME='CNPJ' AND DATA_LENGTH>=18;
  IF v=0 THEN BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO MODIFY (CNPJ VARCHAR2(18))'; EXCEPTION WHEN OTHERS THEN NULL; END; END IF;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE ESTABELECIMENTO ADD CONSTRAINT UK_ESTAB_CNPJ UNIQUE (CNPJ)'; EXCEPTION WHEN OTHERS THEN NULL; END;
END;
/

-- Trigger for ESTABELECIMENTO
CREATE OR REPLACE TRIGGER TR_ESTABELECIMENTO_BI
BEFORE INSERT ON ESTABELECIMENTO
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN :NEW.ID := S_ESTABELECIMENTO.NEXTVAL; END IF;
END;
/

-- ===== RESPONSAVEL =====
DECLARE v INTEGER; BEGIN
  -- PK: ID
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ID';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ID_RESPONSAVEL';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL RENAME COLUMN ID_RESPONSAVEL TO ID'; END IF;
  END IF;
  -- String key
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ID_RESPONSAVEL_STR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (ID_RESPONSAVEL_STR VARCHAR2(255))'; END IF;
  BEGIN EXECUTE IMMEDIATE 'UPDATE RESPONSAVEL SET ID_RESPONSAVEL_STR = RAWTOHEX(SYS_GUID()) WHERE ID_RESPONSAVEL_STR IS NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL MODIFY (ID_RESPONSAVEL_STR NOT NULL)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD CONSTRAINT UK_RESP_IDSTR UNIQUE (ID_RESPONSAVEL_STR)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Columns
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='NOME_RESPONSAVEL';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='NOME';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL RENAME COLUMN NOME TO NOME_RESPONSAVEL';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (NOME_RESPONSAVEL VARCHAR2(255))'; END IF;
  END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CPF_RESPONSAVEL';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CPF';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL RENAME COLUMN CPF TO CPF_RESPONSAVEL';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CPF_RESPONSAVEL VARCHAR2(14))'; END IF;
  END IF;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL MODIFY (CPF_RESPONSAVEL VARCHAR2(14))'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD CONSTRAINT UK_RESP_CPF UNIQUE (CPF_RESPONSAVEL)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Extra columns
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='RG_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (RG_RESPONSAVEL VARCHAR2(20))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CONDICAO_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CONDICAO_RESPONSAVEL VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='ENDERECO_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (ENDERECO_RESPONSAVEL VARCHAR2(500))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='COMPLEMENTO_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (COMPLEMENTO_RESPONSAVEL VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='BAIRRO_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (BAIRRO_RESPONSAVEL VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='RESPONSAVEL' AND COLUMN_NAME='CIDADE_RESPONSAVEL';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE RESPONSAVEL ADD (CIDADE_RESPONSAVEL VARCHAR2(255))'; END IF;
END;
/

CREATE OR REPLACE TRIGGER TR_RESPONSAVEL_BI
BEFORE INSERT ON RESPONSAVEL
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN :NEW.ID := S_RESPONSAVEL.NEXTVAL; END IF;
END;
/

-- ===== TESTEMUNHA =====
DECLARE v INTEGER; BEGIN
  -- PK: ID
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='ID';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='ID_TESTEMUNHA';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA RENAME COLUMN ID_TESTEMUNHA TO ID'; END IF;
  END IF;
  -- String key
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='ID_TESTEMUNHA_STR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (ID_TESTEMUNHA_STR VARCHAR2(255))'; END IF;
  BEGIN EXECUTE IMMEDIATE 'UPDATE TESTEMUNHA SET ID_TESTEMUNHA_STR = RAWTOHEX(SYS_GUID()) WHERE ID_TESTEMUNHA_STR IS NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA MODIFY (ID_TESTEMUNHA_STR NOT NULL)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD CONSTRAINT UK_TEST_IDSTR UNIQUE (ID_TESTEMUNHA_STR)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Columns
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='NOME_TESTEMUNHA';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='NOME';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA RENAME COLUMN NOME TO NOME_TESTEMUNHA';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (NOME_TESTEMUNHA VARCHAR2(255))'; END IF;
  END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='RESIDENCIA_TESTEMUNHA';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (RESIDENCIA_TESTEMUNHA VARCHAR2(500))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='TESTEMUNHA' AND COLUMN_NAME='DOCUMENTO_TESTEMUNHA';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE TESTEMUNHA ADD (DOCUMENTO_TESTEMUNHA VARCHAR2(255))'; END IF;
END;
/

CREATE OR REPLACE TRIGGER TR_TESTEMUNHA_BI
BEFORE INSERT ON TESTEMUNHA
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN :NEW.ID := S_TESTEMUNHA.NEXTVAL; END IF;
END;
/

-- ===== MENOR_ENVOLVIDO =====
DECLARE v INTEGER; BEGIN
  -- Add ID_MENOR_STR (business key)
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='ID_MENOR_STR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (ID_MENOR_STR VARCHAR2(255))'; END IF;
  BEGIN EXECUTE IMMEDIATE 'UPDATE MENOR_ENVOLVIDO SET ID_MENOR_STR = RAWTOHEX(SYS_GUID()) WHERE ID_MENOR_STR IS NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD CONSTRAINT UK_MENOR_IDSTR UNIQUE (ID_MENOR_STR)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Ensure AUTO_INFRACAO_ID numeric and backfill from string if necessary
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='AUTO_INFRACAO_ID';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (AUTO_INFRACAO_ID NUMBER)'; END IF;
  BEGIN
    EXECUTE IMMEDIATE 'UPDATE MENOR_ENVOLVIDO m SET AUTO_INFRACAO_ID = (SELECT a.ID FROM AUTO_INFRACAO a WHERE a.ID_AUTO_INFRACAO_STR = m.ID_AUTO_INFRACAO) WHERE AUTO_INFRACAO_ID IS NULL AND EXISTS (SELECT 1 FROM USER_TAB_COLS WHERE TABLE_NAME=''MENOR_ENVOLVIDO'' AND COLUMN_NAME=''ID_AUTO_INFRACAO'')';
  EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Columns as per DDL
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='NOME_MENOR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (NOME_MENOR VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='DATA_NASCIMENTO_MENOR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (DATA_NASCIMENTO_MENOR DATE)'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='DOCUMENTO_MENOR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (DOCUMENTO_MENOR VARCHAR2(255))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='FILIACAO_MENOR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (FILIACAO_MENOR VARCHAR2(500))'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='MENOR_ENVOLVIDO' AND COLUMN_NAME='RESIDENCIA_MENOR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD (RESIDENCIA_MENOR VARCHAR2(500))'; END IF;
END;
/

-- FK for MENOR_ENVOLVIDO(AUTO_INFRACAO_ID)
BEGIN
  EXECUTE IMMEDIATE 'ALTER TABLE MENOR_ENVOLVIDO ADD CONSTRAINT FK_MENOR_AUTO_NUM FOREIGN KEY (AUTO_INFRACAO_ID) REFERENCES AUTO_INFRACAO(ID)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- ===== AUTO_INFRACAO =====
DECLARE v INTEGER; BEGIN
  -- String ID
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_AUTO_INFRACAO_STR';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ID_AUTO_INFRACAO_STR VARCHAR2(255))'; END IF;
  BEGIN EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO SET ID_AUTO_INFRACAO_STR = RAWTOHEX(SYS_GUID()) WHERE ID_AUTO_INFRACAO_STR IS NULL'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX UX_AUTO_ID_STR ON AUTO_INFRACAO (ID_AUTO_INFRACAO_STR)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- New DER columns
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='HORARIO_INFRACAO';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (HORARIO_INFRACAO TIMESTAMP)'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='COMARCA';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (COMARCA VARCHAR2(255))'; END IF;
  FOR col IN (
    SELECT 'NUMERO_CRIANCAS' COL FROM DUAL UNION ALL
    SELECT 'NUMERO_ADOLESCENTES' FROM DUAL UNION ALL
    SELECT 'FUNDAMENTO_LEGAL' FROM DUAL UNION ALL
    SELECT 'ARTIGO_ECA' FROM DUAL UNION ALL
    SELECT 'PORTARIA_N' FROM DUAL UNION ALL
    SELECT 'NOME_COMISSARIO_AUTUANTE' FROM DUAL UNION ALL
    SELECT 'MATRICULA_AUTUANTE' FROM DUAL UNION ALL
    SELECT 'OBSERVACOES' FROM DUAL UNION ALL
    SELECT 'DATA_INTIMACAO' FROM DUAL UNION ALL
    SELECT 'PRAZO_DEFESA' FROM DUAL
  ) LOOP
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME=col.COL;
    IF v=0 THEN
      IF col.COL IN ('OBSERVACOES') THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (OBSERVACOES CLOB)';
      ELSIF col.COL IN ('NUMERO_CRIANCAS','NUMERO_ADOLESCENTES') THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD ('||col.COL||' NUMBER(3))';
      ELSIF col.COL IN ('DATA_INTIMACAO','PRAZO_DEFESA') THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD ('||col.COL||' DATE)';
      ELSE EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD ('||col.COL||' VARCHAR2(255))'; END IF;
    END IF;
  END LOOP;
  -- Numeric FKs for estabelecimento/responsavel
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ESTABELECIMENTO_ID';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (ESTABELECIMENTO_ID NUMBER)'; END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='RESPONSAVEL_ID';
  IF v=0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD (RESPONSAVEL_ID NUMBER)'; END IF;
  -- Backfill from string IDs if present
  BEGIN
    EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO a SET ESTABELECIMENTO_ID = (SELECT e.ID FROM ESTABELECIMENTO e WHERE e.ID_ESTABELECIMENTO_STR = a.ID_ESTABELECIMENTO) WHERE ESTABELECIMENTO_ID IS NULL AND EXISTS (SELECT 1 FROM USER_TAB_COLS WHERE TABLE_NAME=''AUTO_INFRACAO'' AND COLUMN_NAME=''ID_ESTABELECIMENTO'')';
  EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN
    EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO a SET RESPONSAVEL_ID = (SELECT r.ID FROM RESPONSAVEL r WHERE r.ID_RESPONSAVEL_STR = a.ID_RESPONSAVEL) WHERE RESPONSAVEL_ID IS NULL AND EXISTS (SELECT 1 FROM USER_TAB_COLS WHERE TABLE_NAME=''AUTO_INFRACAO'' AND COLUMN_NAME=''ID_RESPONSAVEL'')';
  EXCEPTION WHEN OTHERS THEN NULL; END;
END;
/

-- FKs and indexes for AUTO_INFRACAO â ESTABELECIMENTO/RESPONSAVEL
BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD CONSTRAINT FK_AUTO_ESTAB_NUM FOREIGN KEY (ESTABELECIMENTO_ID) REFERENCES ESTABELECIMENTO(ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO ADD CONSTRAINT FK_AUTO_RESP_NUM FOREIGN KEY (RESPONSAVEL_ID) REFERENCES RESPONSAVEL(ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'CREATE INDEX IX_AUTO_ESTAB_NUM ON AUTO_INFRACAO (ESTABELECIMENTO_ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'CREATE INDEX IX_AUTO_RESP_NUM ON AUTO_INFRACAO (RESPONSAVEL_ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- ===== AUTO_INFRACAO_TESTEMUNHA =====
DECLARE v INTEGER; BEGIN
  -- If numeric columns do not exist, rename or add
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='AUTO_ID';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='AUTO_INFRACAO_ID';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA RENAME COLUMN AUTO_INFRACAO_ID TO AUTO_ID';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD (AUTO_ID NUMBER)'; END IF;
  END IF;
  SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='TESTEMUNHA_ID';
  IF v=0 THEN
    SELECT COUNT(*) INTO v FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO_TESTEMUNHA' AND COLUMN_NAME='ID_TESTEMUNHA';
    IF v>0 THEN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA RENAME COLUMN ID_TESTEMUNHA TO TESTEMUNHA_ID';
    ELSE EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD (TESTEMUNHA_ID NUMBER)'; END IF;
  END IF;
  -- Backfill from string-based columns if present
  BEGIN
    EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO_TESTEMUNHA t SET AUTO_ID = (SELECT a.ID FROM AUTO_INFRACAO a WHERE a.ID_AUTO_INFRACAO_STR = t.ID_AUTO_INFRACAO) WHERE AUTO_ID IS NULL AND EXISTS (SELECT 1 FROM USER_TAB_COLS WHERE TABLE_NAME=''AUTO_INFRACAO_TESTEMUNHA'' AND COLUMN_NAME=''ID_AUTO_INFRACAO'')';
  EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN
    EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO_TESTEMUNHA t SET TESTEMUNHA_ID = (SELECT x.ID FROM TESTEMUNHA x WHERE x.ID_TESTEMUNHA_STR = t.ID_TESTEMUNHA) WHERE TESTEMUNHA_ID IS NULL AND EXISTS (SELECT 1 FROM USER_TAB_COLS WHERE TABLE_NAME=''AUTO_INFRACAO_TESTEMUNHA'' AND COLUMN_NAME=''ID_TESTEMUNHA'')';
  EXCEPTION WHEN OTHERS THEN NULL; END;
END;
/

-- PK and FKs for AUTO_INFRACAO_TESTEMUNHA
BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT PK_AIT_NUM PRIMARY KEY (AUTO_ID, TESTEMUNHA_ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT FK_AIT_AUTO_NUM FOREIGN KEY (AUTO_ID) REFERENCES AUTO_INFRACAO(ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT FK_AIT_TEST_NUM FOREIGN KEY (TESTEMUNHA_ID) REFERENCES TESTEMUNHA(ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- ===== AGENTE_AREA_ATUACAO FKs (relink to AGENTE_VOLUNTARIO.ID) =====
BEGIN
  -- Drop old FKs if exist
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO DROP CONSTRAINT FK_AA_AGENTE'; EXCEPTION WHEN OTHERS THEN NULL; END;
  BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO DROP CONSTRAINT FK_AA_AREA'; EXCEPTION WHEN OTHERS THEN NULL; END;
  -- Recreate
  EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO ADD CONSTRAINT FK_AA_AGENTE FOREIGN KEY (ID_AGENTE) REFERENCES AGENTE_VOLUNTARIO(ID)';
  EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO ADD CONSTRAINT FK_AA_AREA FOREIGN KEY (ID_AREA_ATUACAO) REFERENCES AREA_ATUACAO(ID_AREA_ATUACAO)';
EXCEPTION WHEN OTHERS THEN NULL; END;
/

