-- Baseline V1 consolidated to the final DDL used by the application

-- =============================
-- Sequences
-- =============================
CREATE SEQUENCE S_AGENTE_VOLUNTARIO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_COMARCA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_AREA_ATUACAO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_CREDENCIAL START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_LOG_AUDITORIA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_LOG_AUDITORIA_AUTO_INFRACAO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_AUTO_INFRACAO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_ANEXO_AUTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_ESTABELECIMENTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_RESPONSAVEL START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_MENOR_ENVOLVIDO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE S_TESTEMUNHA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- =============================
-- Core tables
-- =============================
CREATE TABLE AGENTE_VOLUNTARIO (
  ID                        NUMBER(19)    PRIMARY KEY,
  ID_AGENTE_NEGOCIO         VARCHAR2(255),
  NOME_COMPLETO             VARCHAR2(255) NOT NULL,
  CPF                       VARCHAR2(11)  NOT NULL UNIQUE,
  TELEFONE                  VARCHAR2(20)  NOT NULL,
  EMAIL                     VARCHAR2(255) NOT NULL,
  FOTO                      BLOB,
  NUMERO_CARTEIRA_IDENTIDADE VARCHAR2(20),
  DATA_EXPEDICAO_CI         DATE,
  NACIONALIDADE             VARCHAR2(50),
  NATURALIDADE              VARCHAR2(100),
  UF                        VARCHAR2(2),
  DATA_NASCIMENTO           DATE,
  FILIACAO_PAI              VARCHAR2(255),
  FILIACAO_MAE              VARCHAR2(255),
  DATA_CADASTRO             TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  USUARIO_CADASTRO          VARCHAR2(100) NOT NULL,
  STATUS                    VARCHAR2(20)  NOT NULL,
  DISPONIBILIDADE           VARCHAR2(500)
);

CREATE TABLE COMARCA (
  ID            NUMBER(19)    PRIMARY KEY,
  NOME_COMARCA  VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE AREA_ATUACAO (
  ID_AREA_ATUACAO   NUMBER(19)    PRIMARY KEY,
  NOME_AREA_ATUACAO VARCHAR2(255) NOT NULL UNIQUE
);

CREATE TABLE AGENTE_COMARCA (
  AGENTE_ID   NUMBER(19) NOT NULL,
  COMARCA_ID  NUMBER(19) NOT NULL,
  CONSTRAINT PK_AGENTE_COMARCA PRIMARY KEY (AGENTE_ID, COMARCA_ID),
  CONSTRAINT FK_AC_AGENTE FOREIGN KEY (AGENTE_ID) REFERENCES AGENTE_VOLUNTARIO(ID),
  CONSTRAINT FK_AC_COMARCA FOREIGN KEY (COMARCA_ID) REFERENCES COMARCA(ID)
);

CREATE TABLE AGENTE_AREA_ATUACAO (
  ID_AGENTE        NUMBER(19) NOT NULL,
  ID_AREA_ATUACAO  NUMBER(19) NOT NULL,
  CONSTRAINT PK_AGENTE_AREA PRIMARY KEY (ID_AGENTE, ID_AREA_ATUACAO),
  CONSTRAINT FK_AA_AGENTE FOREIGN KEY (ID_AGENTE) REFERENCES AGENTE_VOLUNTARIO(ID),
  CONSTRAINT FK_AA_AREA   FOREIGN KEY (ID_AREA_ATUACAO) REFERENCES AREA_ATUACAO(ID_AREA_ATUACAO)
);

CREATE TABLE CREDENCIAL (
  ID_CREDENCIAL   NUMBER(19)    PRIMARY KEY,
  ID_AGENTE       NUMBER(19)    NOT NULL,
  DATA_EMISSAO    TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  QR_CODE_URL     VARCHAR2(500) NOT NULL,
  USUARIO_EMISSAO VARCHAR2(100) NOT NULL,
  CONSTRAINT FK_CRED_AGENTE FOREIGN KEY (ID_AGENTE) REFERENCES AGENTE_VOLUNTARIO(ID)
);

CREATE TABLE LOG_AUDITORIA (
  ID_LOG        NUMBER(19)    PRIMARY KEY,
  DATA_HORA     TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  USUARIO       VARCHAR2(100) NOT NULL,
  TIPO_OPERACAO VARCHAR2(50)  NOT NULL,
  DETALHES      CLOB,
  IP_ORIGEM     VARCHAR2(45)
);

CREATE TABLE ESTABELECIMENTO (
  ID                          NUMBER(19)    PRIMARY KEY,
  ID_ESTABELECIMENTO_STR      VARCHAR2(255) NOT NULL UNIQUE,
  CNPJ                        VARCHAR2(18),
  NOME_ESTABELECIMENTO        VARCHAR2(255) NOT NULL,
  ENDERECO_ESTABELECIMENTO    VARCHAR2(500),
  COMPLEMENTO_ESTABELECIMENTO VARCHAR2(255),
  BAIRRO_ESTABELECIMENTO      VARCHAR2(255),
  CIDADE_ESTABELECIMENTO      VARCHAR2(255),
  CONSTRAINT UK_ESTAB_CNPJ UNIQUE (CNPJ)
);

CREATE TABLE RESPONSAVEL (
  ID                     NUMBER(19)    PRIMARY KEY,
  ID_RESPONSAVEL_STR     VARCHAR2(255) NOT NULL UNIQUE,
  NOME_RESPONSAVEL       VARCHAR2(255) NOT NULL,
  RG_RESPONSAVEL         VARCHAR2(20),
  CPF_RESPONSAVEL        VARCHAR2(14),
  CONDICAO_RESPONSAVEL   VARCHAR2(255),
  ENDERECO_RESPONSAVEL   VARCHAR2(500),
  COMPLEMENTO_RESPONSAVEL VARCHAR2(255),
  BAIRRO_RESPONSAVEL     VARCHAR2(255),
  CIDADE_RESPONSAVEL     VARCHAR2(255),
  CONSTRAINT UK_RESP_CPF UNIQUE (CPF_RESPONSAVEL)
);

CREATE TABLE TESTEMUNHA (
  ID                   NUMBER(19)    PRIMARY KEY,
  ID_TESTEMUNHA_STR    VARCHAR2(255) NOT NULL UNIQUE,
  NOME_TESTEMUNHA      VARCHAR2(255) NOT NULL,
  RESIDENCIA_TESTEMUNHA VARCHAR2(500),
  DOCUMENTO_TESTEMUNHA VARCHAR2(255)
);

CREATE TABLE AUTO_INFRACAO (
  ID                         NUMBER(19)    PRIMARY KEY,
  ID_AUTO_INFRACAO_STR       VARCHAR2(255) NOT NULL UNIQUE,
  NUMERO_AUTO                VARCHAR2(255) UNIQUE,
  DATA_INFRACAO              DATE          NOT NULL,
  HORARIO_INFRACAO           TIMESTAMP,
  LOCAL_INFRACAO             VARCHAR2(500) NOT NULL,
  COMARCA                    VARCHAR2(255),
  NUMERO_CRIANCAS            NUMBER(3),
  NUMERO_ADOLESCENTES        NUMBER(3),
  FUNDAMENTO_LEGAL           VARCHAR2(500),
  ARTIGO_ECA                 VARCHAR2(255),
  PORTARIA_N                 VARCHAR2(255),
  NOME_COMISSARIO_AUTUANTE   VARCHAR2(255),
  MATRICULA_AUTUANTE         VARCHAR2(255),
  OBSERVACOES                CLOB,
  DATA_INTIMACAO             DATE,
  PRAZO_DEFESA               DATE,
  ESTABELECIMENTO_ID         NUMBER(19)    NOT NULL,
  RESPONSAVEL_ID             NUMBER(19)    NOT NULL,
  STATUS                     VARCHAR2(20)  NOT NULL,
  DATA_CADASTRO              TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  DATA_ATUALIZACAO           TIMESTAMP,
  USUARIO_CADASTRO           VARCHAR2(100) NOT NULL,
  USUARIO_ATUALIZACAO        VARCHAR2(100),
  DATA_CANCELAMENTO          TIMESTAMP,
  USUARIO_CANCELAMENTO       VARCHAR2(100),
  JUSTIFICATIVA_CANCELAMENTO VARCHAR2(500),
  CONSTRAINT FK_AUTO_ESTAB_NUM FOREIGN KEY (ESTABELECIMENTO_ID) REFERENCES ESTABELECIMENTO(ID),
  CONSTRAINT FK_AUTO_RESP_NUM  FOREIGN KEY (RESPONSAVEL_ID)     REFERENCES RESPONSAVEL(ID)
);

CREATE INDEX IX_AUTO_ESTAB_NUM ON AUTO_INFRACAO (ESTABELECIMENTO_ID);
CREATE INDEX IX_AUTO_RESP_NUM  ON AUTO_INFRACAO (RESPONSAVEL_ID);
CREATE INDEX IDX_AUTO_DATA ON AUTO_INFRACAO (DATA_INFRACAO);

CREATE TABLE MENOR_ENVOLVIDO (
  ID                    NUMBER(19)    PRIMARY KEY,
  ID_MENOR_STR          VARCHAR2(255) NOT NULL UNIQUE,
  NOME_MENOR            VARCHAR2(255) NOT NULL,
  DATA_NASCIMENTO_MENOR DATE,
  DOCUMENTO_MENOR       VARCHAR2(255),
  FILIACAO_MENOR        VARCHAR2(500),
  RESIDENCIA_MENOR      VARCHAR2(500),
  AUTO_INFRACAO_ID      NUMBER(19)    NOT NULL,
  CONSTRAINT FK_MENOR_AUTO_NUM FOREIGN KEY (AUTO_INFRACAO_ID) REFERENCES AUTO_INFRACAO(ID)
);

CREATE INDEX IDX_MENOR_AUTO ON MENOR_ENVOLVIDO (AUTO_INFRACAO_ID);

CREATE TABLE AUTO_INFRACAO_TESTEMUNHA (
  AUTO_ID       NUMBER(19) NOT NULL,
  TESTEMUNHA_ID NUMBER(19) NOT NULL,
  CONSTRAINT PK_AIT_NUM PRIMARY KEY (AUTO_ID, TESTEMUNHA_ID),
  CONSTRAINT FK_AIT_AUTO_NUM FOREIGN KEY (AUTO_ID) REFERENCES AUTO_INFRACAO(ID),
  CONSTRAINT FK_AIT_TEST_NUM FOREIGN KEY (TESTEMUNHA_ID) REFERENCES TESTEMUNHA(ID)
);

CREATE TABLE ANEXO_AUTO_INFRACAO (
  ID               NUMBER(19)    PRIMARY KEY,
  AUTO_INFRACAO_ID NUMBER(19)    NOT NULL,
  NOME_ARQUIVO     VARCHAR2(255) NOT NULL,
  NOME_ORIGINAL    VARCHAR2(255) NOT NULL,
  TIPO_ARQUIVO     VARCHAR2(100) NOT NULL,
  TAMANHO_ARQUIVO  NUMBER(19)    NOT NULL,
  CAMINHO_ARQUIVO  VARCHAR2(500) NOT NULL,
  DESCRICAO        VARCHAR2(500),
  DATA_UPLOAD      TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  USUARIO_UPLOAD   VARCHAR2(100) NOT NULL,
  CONSTRAINT FK_ANEXO_AUTO FOREIGN KEY (AUTO_INFRACAO_ID) REFERENCES AUTO_INFRACAO(ID)
);

CREATE INDEX IDX_ANEXO_AUTO ON ANEXO_AUTO_INFRACAO (AUTO_INFRACAO_ID);

CREATE TABLE LOG_AUDITORIA_AUTO_INFRACAO (
  ID               NUMBER(19)    PRIMARY KEY,
  AUTO_INFRACAO_ID NUMBER(19)    NOT NULL,
  TIPO_OPERACAO    VARCHAR2(50)  NOT NULL,
  USUARIO          VARCHAR2(100) NOT NULL,
  PERFIL_USUARIO   VARCHAR2(50),
  DATA_OPERACAO    TIMESTAMP     DEFAULT SYSTIMESTAMP NOT NULL,
  ENDERECO_IP      VARCHAR2(100),
  DETALHES         CLOB,
  JUSTIFICATIVA    VARCHAR2(500),
  SUCESSO          NUMBER(1)     DEFAULT 1 NOT NULL,
  MENSAGEM_ERRO    VARCHAR2(500),
  CONSTRAINT FK_LOGAI_AUTO FOREIGN KEY (AUTO_INFRACAO_ID) REFERENCES AUTO_INFRACAO(ID)
);

-- =============================
-- Triggers for sequences (set ID if null)
-- =============================
CREATE OR REPLACE TRIGGER TR_BI_AGENTE_VOLUNTARIO
BEFORE INSERT ON AGENTE_VOLUNTARIO FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_AGENTE_VOLUNTARIO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_COMARCA
BEFORE INSERT ON COMARCA FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_COMARCA.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_AREA_ATUACAO
BEFORE INSERT ON AREA_ATUACAO FOR EACH ROW
BEGIN IF :NEW.ID_AREA_ATUACAO IS NULL THEN :NEW.ID_AREA_ATUACAO := S_AREA_ATUACAO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_CREDENCIAL
BEFORE INSERT ON CREDENCIAL FOR EACH ROW
BEGIN IF :NEW.ID_CREDENCIAL IS NULL THEN :NEW.ID_CREDENCIAL := S_CREDENCIAL.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_LOG_AUDITORIA
BEFORE INSERT ON LOG_AUDITORIA FOR EACH ROW
BEGIN IF :NEW.ID_LOG IS NULL THEN :NEW.ID_LOG := S_LOG_AUDITORIA.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_AUTO_INFRACAO
BEFORE INSERT ON AUTO_INFRACAO FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_AUTO_INFRACAO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_ANEXO_AUTO
BEFORE INSERT ON ANEXO_AUTO_INFRACAO FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_ANEXO_AUTO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_ESTABELECIMENTO
BEFORE INSERT ON ESTABELECIMENTO FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_ESTABELECIMENTO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_RESPONSAVEL
BEFORE INSERT ON RESPONSAVEL FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_RESPONSAVEL.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_MENOR
BEFORE INSERT ON MENOR_ENVOLVIDO FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_MENOR_ENVOLVIDO.NEXTVAL; END IF; END;
/

CREATE OR REPLACE TRIGGER TR_BI_TESTEMUNHA
BEFORE INSERT ON TESTEMUNHA FOR EACH ROW
BEGIN IF :NEW.ID IS NULL THEN :NEW.ID := S_TESTEMUNHA.NEXTVAL; END IF; END;
/
