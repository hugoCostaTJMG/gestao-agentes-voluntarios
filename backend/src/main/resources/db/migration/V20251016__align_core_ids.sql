-- Align core ID columns and join columns to corrected DDL (Oracle)
-- Idempotent: checks USER_* views before altering

-- Ensure sequences exist (defensive)
DECLARE v_count INTEGER; BEGIN
  SELECT COUNT(*) INTO v_count FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'S_AGENTE_VOLUNTARIO';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_AGENTE_VOLUNTARIO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
  SELECT COUNT(*) INTO v_count FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'S_COMARCA';
  IF v_count = 0 THEN EXECUTE IMMEDIATE 'CREATE SEQUENCE S_COMARCA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE'; END IF;
END;
/

-- AGENTE_VOLUNTARIO: rename PK column ID_AGENTE -> ID
DECLARE v_id INTEGER; v_old INTEGER; BEGIN
  SELECT COUNT(*) INTO v_id FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_VOLUNTARIO' AND COLUMN_NAME='ID';
  SELECT COUNT(*) INTO v_old FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_VOLUNTARIO' AND COLUMN_NAME='ID_AGENTE';
  IF v_id = 0 AND v_old > 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_VOLUNTARIO RENAME COLUMN ID_AGENTE TO ID';
  END IF;
END;
/

-- Recreate trigger to populate ID from sequence
CREATE OR REPLACE TRIGGER TR_AGENTE_VOLUNTARIO_BI
BEFORE INSERT ON AGENTE_VOLUNTARIO
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN :NEW.ID := S_AGENTE_VOLUNTARIO.NEXTVAL; END IF;
END;
/

-- COMARCA: rename PK column ID_COMARCA -> ID
DECLARE v_id INTEGER; v_old INTEGER; BEGIN
  SELECT COUNT(*) INTO v_id FROM USER_TAB_COLS WHERE TABLE_NAME='COMARCA' AND COLUMN_NAME='ID';
  SELECT COUNT(*) INTO v_old FROM USER_TAB_COLS WHERE TABLE_NAME='COMARCA' AND COLUMN_NAME='ID_COMARCA';
  IF v_id = 0 AND v_old > 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE COMARCA RENAME COLUMN ID_COMARCA TO ID';
  END IF;
END;
/

-- Recreate trigger to populate ID from sequence
CREATE OR REPLACE TRIGGER TR_COMARCA_BI
BEFORE INSERT ON COMARCA
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN :NEW.ID := S_COMARCA.NEXTVAL; END IF;
END;
/

-- AGENTE_COMARCA: standardize FK column names for join table
DECLARE v_cnt INTEGER; BEGIN
  -- Rename ID_AGENTE -> AGENTE_ID if needed
  SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_COMARCA' AND COLUMN_NAME='AGENTE_ID';
  IF v_cnt = 0 THEN
    SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_COMARCA' AND COLUMN_NAME='ID_AGENTE';
    IF v_cnt > 0 THEN
      EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_COMARCA RENAME COLUMN ID_AGENTE TO AGENTE_ID';
    END IF;
  END IF;
  -- Rename ID_COMARCA -> COMARCA_ID if needed
  SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_COMARCA' AND COLUMN_NAME='COMARCA_ID';
  IF v_cnt = 0 THEN
    SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AGENTE_COMARCA' AND COLUMN_NAME='ID_COMARCA';
    IF v_cnt > 0 THEN
      EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_COMARCA RENAME COLUMN ID_COMARCA TO COMARCA_ID';
    END IF;
  END IF;
  -- Add unique (AGENTE_ID, COMARCA_ID) if absent
  SELECT COUNT(*) INTO v_cnt FROM USER_CONSTRAINTS WHERE TABLE_NAME='AGENTE_COMARCA' AND CONSTRAINT_TYPE='U' AND CONSTRAINT_NAME='UK_AGENTE_COMARCA';
  IF v_cnt = 0 THEN
    BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_COMARCA ADD CONSTRAINT UK_AGENTE_COMARCA UNIQUE (AGENTE_ID, COMARCA_ID)'; EXCEPTION WHEN OTHERS THEN NULL; END;
  END IF;
END;
/

-- AUTO_INFRACAO: rename ID_AUTO_INFRACAO -> ID_AUTO_INFRACAO_STR (if older migration created without _STR)
DECLARE v_cnt INTEGER; BEGIN
  SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_AUTO_INFRACAO_STR';
  IF v_cnt = 0 THEN
    SELECT COUNT(*) INTO v_cnt FROM USER_TAB_COLS WHERE TABLE_NAME='AUTO_INFRACAO' AND COLUMN_NAME='ID_AUTO_INFRACAO';
    IF v_cnt > 0 THEN
      BEGIN EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO RENAME COLUMN ID_AUTO_INFRACAO TO ID_AUTO_INFRACAO_STR'; EXCEPTION WHEN OTHERS THEN NULL; END;
    END IF;
  END IF;
END;
/

