-- V20251016_4__add_id_number_and_sequences_join_tables.sql
-- Alvo: AGENTE_COMARCA, AGENTE_AREA_ATUACAO, AUTO_INFRACAO_TESTEMUNHA
-- Ações: ADD ID NUMBER(19), criar SEQUENCE, backfill, NOT NULL, PK(ID), UNIQUE(par), triggers TR_BIR_*, FK faltante (AIT->AIN)

-- ==========================
-- util: cria coluna ID NUMBER(19) se não existir
-- ==========================
DECLARE
  v_exists NUMBER;
BEGIN
  FOR t IN (
    SELECT 'AGENTE_COMARCA' AS tn FROM dual
    UNION ALL SELECT 'AGENTE_AREA_ATUACAO' FROM dual
    UNION ALL SELECT 'AUTO_INFRACAO_TESTEMUNHA' FROM dual
  ) LOOP
    SELECT COUNT(*) INTO v_exists
    FROM user_tab_cols
    WHERE table_name = t.tn AND column_name = 'ID';
    IF v_exists = 0 THEN
      EXECUTE IMMEDIATE 'ALTER TABLE '||t.tn||' ADD (ID NUMBER(19))';
    END IF;
  END LOOP;
END;
/

-- ==========================
-- SEQUENCES (uma por tabela N:N)
-- ==========================
BEGIN
  EXECUTE IMMEDIATE 'CREATE SEQUENCE S_AGENTE_COMARCA NOCACHE NOCYCLE NOORDER';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -955 THEN RAISE; END IF; END;
/
BEGIN
  EXECUTE IMMEDIATE 'CREATE SEQUENCE S_AGENTE_AREA_ATUACAO NOCACHE NOCYCLE NOORDER';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -955 THEN RAISE; END IF; END;
/
BEGIN
  EXECUTE IMMEDIATE 'CREATE SEQUENCE S_AUTO_INFRACAO_TESTEMUNHA NOCACHE NOCYCLE NOORDER';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -955 THEN RAISE; END IF; END;
/

-- ==========================
-- BACKFILL de IDs nulos
-- ==========================
BEGIN
  EXECUTE IMMEDIATE 'UPDATE AGENTE_COMARCA SET ID = S_AGENTE_COMARCA.NEXTVAL WHERE ID IS NULL';
  EXECUTE IMMEDIATE 'UPDATE AGENTE_AREA_ATUACAO SET ID = S_AGENTE_AREA_ATUACAO.NEXTVAL WHERE ID IS NULL';
  EXECUTE IMMEDIATE 'UPDATE AUTO_INFRACAO_TESTEMUNHA SET ID = S_AUTO_INFRACAO_TESTEMUNHA.NEXTVAL WHERE ID IS NULL';
END;
/

-- ==========================
-- NOT NULL em ID
-- ==========================
BEGIN
  FOR t IN (
    SELECT 'AGENTE_COMARCA' AS tn FROM dual
    UNION ALL SELECT 'AGENTE_AREA_ATUACAO' FROM dual
    UNION ALL SELECT 'AUTO_INFRACAO_TESTEMUNHA' FROM dual
  ) LOOP
    BEGIN
      EXECUTE IMMEDIATE 'ALTER TABLE '||t.tn||' MODIFY (ID NOT NULL)';
    EXCEPTION WHEN OTHERS THEN
      IF SQLCODE NOT IN (-01442) THEN RAISE; END IF; -- já é NOT NULL
    END;
  END LOOP;
END;
/

-- ==========================
-- Promover PK(ID) e criar UNIQUE(par de negócio)
-- ==========================
-- AGENTE_COMARCA
DECLARE
  v_pk NUMBER; v_uk NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_pk FROM user_constraints WHERE table_name='AGENTE_COMARCA' AND constraint_type='P';
  IF v_pk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_COMARCA ADD CONSTRAINT PK_AGC PRIMARY KEY (ID)';
  END IF;

  SELECT COUNT(*) INTO v_uk FROM user_constraints WHERE table_name='AGENTE_COMARCA' AND constraint_type='U' AND constraint_name='UK_AGC01';
  IF v_uk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_COMARCA ADD CONSTRAINT UK_AGC01 UNIQUE (AGENTE_ID, COMARCA_ID)';
  END IF;
END;
/

-- AGENTE_AREA_ATUACAO
DECLARE
  v_pk NUMBER; v_uk NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_pk FROM user_constraints WHERE table_name='AGENTE_AREA_ATUACAO' AND constraint_type='P';
  IF v_pk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO ADD CONSTRAINT PK_AAA PRIMARY KEY (ID)';
  END IF;

  SELECT COUNT(*) INTO v_uk FROM user_constraints WHERE table_name='AGENTE_AREA_ATUACAO' AND constraint_type='U' AND constraint_name='UK_AAA01';
  IF v_uk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AGENTE_AREA_ATUACAO ADD CONSTRAINT UK_AAA01 UNIQUE (ID_AGENTE, ID_AREA_ATUACAO)';
  END IF;
END;
/

-- AUTO_INFRACAO_TESTEMUNHA
DECLARE
  v_pk NUMBER; v_uk NUMBER; v_fk NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_pk FROM user_constraints WHERE table_name='AUTO_INFRACAO_TESTEMUNHA' AND constraint_type='P';
  IF v_pk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT PK_AIT PRIMARY KEY (ID)';
  END IF;

  SELECT COUNT(*) INTO v_uk FROM user_constraints WHERE table_name='AUTO_INFRACAO_TESTEMUNHA' AND constraint_type='U' AND constraint_name='UK_AIT01';
  IF v_uk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT UK_AIT01 UNIQUE (AUTO_ID, TESTEMUNHA_ID)';
  END IF;

  -- FK faltante: AUTO_INFRACAO_TESTEMUNHA.AUTO_ID -> AUTO_INFRACAO.ID
  SELECT COUNT(*) INTO v_fk FROM user_constraints WHERE table_name='AUTO_INFRACAO_TESTEMUNHA' AND constraint_type='R' AND constraint_name='FK_AIT_AIN01';
  IF v_fk = 0 THEN
    EXECUTE IMMEDIATE 'ALTER TABLE AUTO_INFRACAO_TESTEMUNHA ADD CONSTRAINT FK_AIT_AIN01 FOREIGN KEY (AUTO_ID) REFERENCES AUTO_INFRACAO(ID)';
  END IF;
END;
/

-- ==========================
-- TRIGGERS TR_BIR_<ALIAS>01
-- ==========================
-- AGENTE_COMARCA
BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE OR REPLACE TRIGGER TR_BIR_AGC01
    BEFORE INSERT ON AGENTE_COMARCA
    FOR EACH ROW
    BEGIN
      IF :NEW.ID IS NULL THEN
        :NEW.ID := S_AGENTE_COMARCA.NEXTVAL;
      END IF;
    END;
  ]';
END;
/
-- AGENTE_AREA_ATUACAO
BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE OR REPLACE TRIGGER TR_BIR_AAA01
    BEFORE INSERT ON AGENTE_AREA_ATUACAO
    FOR EACH ROW
    BEGIN
      IF :NEW.ID IS NULL THEN
        :NEW.ID := S_AGENTE_AREA_ATUACAO.NEXTVAL;
      END IF;
    END;
  ]';
END;
/
-- AUTO_INFRACAO_TESTEMUNHA
BEGIN
  EXECUTE IMMEDIATE q'[
    CREATE OR REPLACE TRIGGER TR_BIR_AIT01
    BEFORE INSERT ON AUTO_INFRACAO_TESTEMUNHA
    FOR EACH ROW
    BEGIN
      IF :NEW.ID IS NULL THEN
        :NEW.ID := S_AUTO_INFRACAO_TESTEMUNHA.NEXTVAL;
      END IF;
    END;
  ]';
END;
/

